#!/usr/bin/perl -w
#
# Copyright 2009 Geoff Levand
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#

package main;

use strict;
use warnings;
use Getopt::Std;

my $app_name = q(fiche-indexer);
my $package_name = q(fiche-maker);
my $app_version = q(1.0);

sub VERSION_MESSAGE
{
	print($app_name . " (" . $package_name . ") " . $app_version . "\n");
}

$Getopt::Std::STANDARD_HELP_VERSION = 1;

sub HELP_MESSAGE
{
	print("SYNOPSIS\n"
. "     " . $app_name . " [-OPTIONS]\n"
. "DESCRIPTION\n"
. "     Index html fishe pages.\n"
. "OPTIONS\n"
. "     -h, --help\n"
. "          Print a help message.\n"
. "     -V, --version\n"
. "          Display the program version number.\n"
	);
}

sub opts_parse (@)
{
	my ($opts) = @_;
	our ($opt_h, $opt_V);

	getopts('hV');

	if (defined($opt_h)) {
		VERSION_MESSAGE();
		HELP_MESSAGE();
		exit 0;
	}
	
	if (defined($opt_V)) {
		VERSION_MESSAGE();
		exit 0;
	}
}

# start of program

my %opts;
opts_parse(\%opts);

my $time =`date '+%y.%m.%d %H:%M'`;
chomp($time);

my @files;
my %tags;

while(<>) {
	chomp($_);

	my %file;
	$file{name} = $1 if (m{.*/([^/]*)$});

	my $result = open(FH, "<" . $_);
	die("open " . $_ . " failed") if ($result != 1);

	while(my $line = <FH>) {
		$file{html_title} = $1 if ($line =~ m{<title>(.+)</title>}i);

		$file{model_name} = $1
			if ($line =~ m{<span id=\"model\">(.+)</span>}i);

		if ($line =~ m{<span id=\"diagram\">(([0-9]+)_([0-9]+))</span>}i) {
			$file{diagram} = $1;
			$file{group_no} = $2;
			$file{sub_no} = $3;
		}

		if ($line =~ m{<span id=\"group\">(.+)</span>}i) {
			$file{group_name} = $1;
			$tags{model} = $file{model_name}
				if (!defined($tags{model}));
		}
	}

	push(@files, \%file);
	close(FH);
}

@files = sort { $a->{diagram} cmp $b->{diagram} } @files;

print STDOUT ("<html>\n");
print STDOUT ("<head>\n");
print STDOUT (" <title>fiche index: " . $tags{model} . "</title>\n");
print STDOUT ("</head>\n");
print STDOUT ("<body>\n");

print STDOUT ("<p>\n");
print STDOUT ("<b>" . $tags{model} . "</b><br>\n");
print STDOUT ("model index<br>\n");
print STDOUT ("</p>\n");

print STDOUT ("<p>\n");
PART: foreach my $file (@files) {
	print STDOUT ("<nobr>" . $file->{diagram} . "</nobr>"
		. "&nbsp;&nbsp;"
		. "<a href=\"" . $file->{name} . "\">"
		. "<nobr>" . $file->{group_name} . "</nobr></a><br>\n");
}
print STDOUT ("</p>\n");

print STDOUT ("<p>\n");
print STDOUT ("generated by " . $app_name . "-" . $app_version . " at "
	. $time . "\n");
print STDOUT ("</p>\n");

print STDOUT ("</body>\n");
print STDOUT ("</html>\n");

__END__
