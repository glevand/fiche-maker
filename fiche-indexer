#!/usr/bin/perl -w
#
# Copyright 2009 Geoff Levand
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; version 2 of the License.
#

package main;

use strict;
use warnings;
use Getopt::Std;

my $app_name = q(fiche-indexer);
my $package_name = q(fiche-maker);
my $app_version = q(1.0);

sub VERSION_MESSAGE
{
	print($app_name . " (" . $package_name . ") " . $app_version . "\n");
}

$Getopt::Std::STANDARD_HELP_VERSION = 1;

sub HELP_MESSAGE
{
	print(
  "SYNOPSIS\n"
. "     " . $app_name . " [OPTIONS]\n"
. "DESCRIPTION\n"
. "     Create a fiche index from a list of html fishe pages\n"
. "     given on stdin.  Generally, the input files should be\n"
. "     generated by fiche-maker.\n"
. "OPTIONS\n"
. "     -d, --no-part-description\n"
. "          Do not generate a part description sorted list.\n"
. "     -h, --help\n"
. "          Print a help message.\n"
. "     -n, --no-part-number\n"
. "          Do not generate a part number sorted list.\n"
. "     -o OUT, --output-dir=OUT\n"
. "          Put generated files in directory OUT.  The default is to\n"
. "          put the generated file in the current directory.\n"
. "     -p, --no-price\n"
. "          Do not generate a price sorted list.\n"
. "     -v, --verbose\n"
. "          Verbose program execution.\n"
. "     -V, --version\n"
. "          Display the program version number.\n"
. "EXAMPLES\n"
. "     find out -name \'*.html\' | ". $app_name . " --output-dir=out\n"
	);
}

sub opts_parse (@)
{
	my ($opts) = @_;
	our ($opt_d, $opt_h, $opt_n, $opt_o, $opt_p, $opt_v, $opt_V);

	getopts('dhno:pvV');

	$opts->{no_description} = defined($opt_d);

	if (defined($opt_h)) {
		VERSION_MESSAGE();
		HELP_MESSAGE();
		exit 0;
	}

	$opts->{no_number} = defined($opt_n);
	$opts->{out} = $opt_o;
	$opts->{no_price} = defined($opt_p);
	$opts->{verbose} = defined($opt_v);

	if (defined($opt_V)) {
		VERSION_MESSAGE();
		exit 0;
	}
}

sub parse_row (@)
{
	my ($fh, $part) = @_;
	my $line;

	$line = <$fh>;
	$part->{img_no} = $1
		if ($line =~ m{<td>([-0-9]+)</td>}i);

	$line = <$fh>;
	$part->{desc} = $1
		if ($line =~ m{<td>(.+)</td>}i);

	$line = <$fh>;
	$part->{supp} = $1
		if ($line =~ m{<td>(.+)</td>}i);

	$line = <$fh>;
	$part->{quantity} = $1
		if ($line =~ m{<td>([X0-9][-0-9]?)</td>}i);

	$line = <$fh>;
	$part->{part_no} = $1
		if ($line =~ m{<td>([-0-9]+)</td>}i);

	$line = <$fh>;
	$part->{price} = $1
		if ($line =~ m{<td align=['"]right['"]>\$?([^\$<]+)</td>}i);

	while(<$fh>) {
		last if (m{</tr>}i);
	}

	die($app_name . ": img_no not found") if (!defined($part->{img_no}));
	die($app_name . ": desc not found") if (!defined($part->{desc}));
	die($app_name . ": supp not found") if (!defined($part->{supp}));
	die($app_name . ": quantity not found") if (!defined($part->{quantity}));
	die($app_name . ": part_no not found") if (!defined($part->{part_no}));
	die($app_name . ": price not found") if (!defined($part->{price}));

	return 1;
}

sub make_index (@)
{
	my ($opts, $tags, $files, $footer) = @_;

	my $need_nav = (!$opts->{no_description} || !$opts->{no_number}
		|| !$opts->{no_price});

	my $out = $opts->{out} ? $opts->{out} . "/index.html" : "index.html";

	my $result = open(OUT, ">" . $out);
	die($app_name . ": open " . $out . " failed") if ($result != 1);

	print OUT ("<html>\n");
	print OUT ("<head>\n");
	print OUT (" <title>fiche index: " . $tags->{model} . "</title>\n");
	print OUT ("</head>\n");
	print OUT ("<body>\n");

	print OUT ("<p>\n");

	print OUT ("<nobr>index</nobr>&nbsp;&nbsp;")
		if ($need_nav);

	print OUT ("<nobr><a href=\"description-list.html\">description list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_description});

	print OUT ("<nobr><a href=\"part-number-list.html\">part number list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_number});

	print OUT ("<nobr><a href=\"price-list.html\">price list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_price});

	print OUT ("<br>\n")
		if ($need_nav);

	print OUT ($tags->{model} . "<br>\n");
	print OUT ("<b>model index</b><br>\n");

	print OUT ("</p>\n");

	print OUT ("<p>\n");
	FILE: foreach my $f (sort { $a->{diagram} cmp $b->{diagram} } @{$files}) {
		print OUT ("<nobr>" . $f->{diagram} . "</nobr>&nbsp;&nbsp;"
			. "<a href=\"" . $f->{name} . "\">"
			. "<nobr>" . $f->{group_name} . "</nobr></a><br>\n");
	}
	print OUT ("</p>\n");

	print OUT ("<p>\n");

	print OUT ($footer . "\n");
	print OUT ("</p>\n");

	print OUT ("</body>\n");
	print OUT ("</html>\n");

	close(OUT);
}

sub make_description_list (@)
{
	my ($opts, $tags, $parts, $footer) = @_;

	my $out = $opts->{out} ? $opts->{out} . "/description-list.html"
		: "description-list.html";

	my $result = open(OUT, ">" . $out);
	die($app_name . ": open " . $out . " failed") if ($result != 1);

	my @sorted = sort { $a->{file}->{name} cmp $b->{file}->{name} } @{$parts};
	@sorted = sort { $a->{desc} cmp $b->{desc} } @sorted;

	print OUT ("<html>\n");
	print OUT ("<head>\n");
	print OUT (" <title>part description list: " . $tags->{model} . "</title>\n");
	print OUT ("</head>\n");
	print OUT ("<body>\n");

	print OUT ("<p>\n");
	print OUT ("<a href=\"index.html\"><nobr>index</nobr></a>&nbsp;&nbsp;");
	print OUT ("<nobr>description list</nobr>&nbsp;&nbsp;");

	print OUT ("<nobr><a href=\"part-number-list.html\">part number list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_number});

	print OUT ("<nobr><a href=\"price-list.html\">price list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_price});

	print OUT ("<br>\n");

	print OUT ($tags->{model} . "<br>\n");
	print OUT ("<b>part description list</b><br>\n");

	print OUT ("</p>\n");

	print OUT ("<p>\n");
	print OUT ("<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n");

	print OUT (" <tr>\n");
	print OUT ("  <td><b>Description</b></td>\n");
	print OUT ("  <td><b>Group</b></td>\n");
	print OUT ("  <td><b>Supplement</b></td>\n");
	print OUT ("  <td><b>Part Number</b></td>\n");
	print OUT ("  <td><b>Price</b></td>\n");
	print OUT (" </tr>\n");
	print OUT ("\n");

	PART: foreach my $part (@sorted) {
		print OUT (" <tr id=\"part-by-desc\">\n");
		print OUT ("  <td>" . $part->{desc} . "</td>\n");
		print OUT ("  <td><a href=\"" . $part->{file}->{name} . "\">" . $part->{file}->{group_name} . "</a></td>\n");
		print OUT ("  <td>" . $part->{supp} . "</td>\n");
		print OUT ("  <td>" . $part->{part_no} . "</td>\n");
		print OUT ("  <td align='right'>\$" . $part->{price} . "</td>\n");
		print OUT (" </tr>\n");
		print OUT ("\n");
	}

	print OUT ("</table>\n");
	print OUT ("</p>\n");

	print OUT ("<p>\n");
	print OUT ($footer . "\n");
	print OUT ("</p>\n");

	print OUT ("</body>\n");
	print OUT ("</html>\n");
}

sub make_number_list (@)
{
	my ($opts, $tags, $parts, $footer) = @_;

	my $out = $opts->{out} ? $opts->{out} . "/part-number-list.html"
		: "part-number-list.html";

	my $result = open(OUT, ">" . $out);
	die($app_name . ": open " . $out . " failed") if ($result != 1);

	print OUT ("<html>\n");
	print OUT ("<head>\n");
	print OUT (" <title>part number list: " . $tags->{model} . "</title>\n");
	print OUT ("</head>\n");
	print OUT ("<body>\n");

	print OUT ("<p>\n");
	print OUT ("<a href=\"index.html\"><nobr>index</nobr></a>&nbsp;&nbsp;");
	print OUT ("<nobr><a href=\"description-list.html\">description list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_description});

	print OUT ("<nobr>part number list</nobr>&nbsp;&nbsp;");

	print OUT ("<nobr><a href=\"price-list.html\">price list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_price});

	print OUT ("<br>\n");

	print OUT ($tags->{model} . "<br>\n");
	print OUT ("<b>part number list</b><br>\n");

	print OUT ("</p>\n");

	print OUT ("<p>\n");
	print OUT ("<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n");

	print OUT (" <tr>\n");
	print OUT ("  <td><b>Part Number</b></td>\n");
	print OUT ("  <td><b>Description</b></td>\n");
	print OUT ("  <td><b>Group</b></td>\n");
	print OUT ("  <td><b>Supplement</b></td>\n");
	print OUT ("  <td><b>Price</b></td>\n");
	print OUT (" </tr>\n");
	print OUT ("\n");

	PART: foreach my $part (sort { $a->{part_no} cmp $b->{part_no} } @{$parts}) {
		print OUT (" <tr id=\"part-by-number\">\n");
		print OUT ("  <td>" . $part->{part_no} . "</td>\n");
		print OUT ("  <td>" . $part->{desc} . "</td>\n");
		print OUT ("  <td><a href=\"" . $part->{file}->{name} . "\">" . $part->{file}->{group_name} . "</a></td>\n");
		print OUT ("  <td>" . $part->{supp} . "</td>\n");
		print OUT ("  <td align='right'>\$" . $part->{price} . "</td>\n");
		print OUT (" </tr>\n");
		print OUT ("\n");
	}

	print OUT ("</table>\n");
	print OUT ("</p>\n");

	print OUT ("<p>\n");
	print OUT ($footer . "\n");
	print OUT ("</p>\n");

	print OUT ("</body>\n");
	print OUT ("</html>\n");
}

sub cmp_price {
	# FIXME: need something better

	# Put N/As at bottom.

	return 1 if ($a->{price} =~ m{N/A}i);
	return -1 if ($b->{price} =~ m{N/A}i);

	# Put shorter ones first.

	return -1 if (length($a->{price}) < length($b->{price}));
	return 1 if (length($a->{price}) > length($b->{price}));

	$a->{price} cmp $b->{price};
}

sub make_price_list (@)
{
	my ($opts, $tags, $parts, $footer) = @_;

	my $out = $opts->{out} ? $opts->{out} . "/price-list.html"
		: "price-list.html";

	my $result = open(OUT, ">" . $out);
	die($app_name . ": open " . $out . " failed") if ($result != 1);

	my @sorted = sort { $a->{part_no} cmp $b->{part_no} } @{$parts};
	@sorted = sort { $a->{desc} cmp $b->{desc} } @{$parts};
	@sorted = sort cmp_price @sorted;

	print OUT ("<html>\n");
	print OUT ("<head>\n");
	print OUT (" <title>price list: " . $tags->{model} . "</title>\n");
	print OUT ("</head>\n");
	print OUT ("<body>\n");

	print OUT ("<p>\n");
	print OUT ("<a href=\"index.html\"><nobr>index</nobr></a>&nbsp;&nbsp;");
	print OUT ("<nobr><a href=\"description-list.html\">description list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_description});

	print OUT ("<nobr><a href=\"part-number-list.html\">part number list</nobr></a>&nbsp;&nbsp;")
		if (!$opts->{no_number});

	print OUT ("<nobr>price list</nobr></a>&nbsp;&nbsp;");

	print OUT ("<br>\n");

	print OUT ($tags->{model} . "<br>\n");
	print OUT ("<b>price list</b><br>\n");

	print OUT ("</p>\n");

	print OUT ("<p>\n");
	print OUT ("<table border=\"1\" cellpadding=\"2\" cellspacing=\"0\">\n");

	print OUT (" <tr>\n");
	print OUT ("  <td><b>Price</b></td>\n");
	print OUT ("  <td><b>Description</b></td>\n");
	print OUT ("  <td><b>Group</b></td>\n");
	print OUT ("  <td><b>Supplement</b></td>\n");
	print OUT ("  <td><b>Part Number</b></td>\n");
	print OUT (" </tr>\n");
	print OUT ("\n");

	PART: foreach my $part (@sorted) {
		print OUT (" <tr id=\"part-by-price\">\n");
		print OUT ("  <td align='right'>\$" . $part->{price} . "</td>\n");
		print OUT ("  <td>" . $part->{desc} . "</td>\n");
		print OUT ("  <td><a href=\"" . $part->{file}->{name} . "\">" . $part->{file}->{group_name} . "</a></td>\n");
		print OUT ("  <td>" . $part->{supp} . "</td>\n");
		print OUT ("  <td>" . $part->{part_no} . "</td>\n");
		print OUT (" </tr>\n");
		print OUT ("\n");
	}

	print OUT ("</table>\n");
	print OUT ("</p>\n");

	print OUT ("<p>\n");
	print OUT ($footer . "\n");
	print OUT ("</p>\n");

	print OUT ("</body>\n");
	print OUT ("</html>\n");
}

# start of program

my %opts;
opts_parse(\%opts);

my $time =`date '+%y.%m.%d %H:%M'`;
chomp($time);

my @files;
my @parts;
my %tags;

FILE: while(<>) {
	chomp($_);

	my %file;

	$file{path} = $_;
	$file{name} = $1 if (m{.*/([^/]*)$});

	my $fh;
	my $result = open($fh, "<" . $_);
	die($app_name . ": open " . $_ . " failed") if ($result != 1);

	LINE: while(my $line = <$fh>) {

		$file{html_title} = $1 if ($line =~ m{<title>(.+)</title>}i);

		$file{model_name} = $1
			if ($line =~ m{<span id=\"model\">(.+)</span>}i);

		if ($line =~
			m{<span id=\"diagram\">(([0-9]+)_([0-9]+))</span>}i) {
			$file{diagram} = $1;
			$file{group_no} = $2;
			$file{sub_no} = $3;
		}

		if ($line =~ m{<span id=\"group\">(.+)</span>}i) {
			$file{group_name} = $1;
			$tags{model} = $file{model_name}
				if (!defined($tags{model}));
		}

		if ($line =~ m{<tr id=\"part\">}i) {
			my %part;

			$part{file} = \%file;
			parse_row($fh, \%part);
			push(@parts, \%part);
		}
	}

	close($fh);

	if (!defined($file{diagram})) {
		print STDERR ($file{path}
			. ": skipping, no diagram tag found. Not a fiche?\n");
		next FILE;
	}

	push(@files, \%file);
}

print STDERR ($app_name . ": found " . (1 + $#files) . " fiche files\n")
	if ($opts{verbose});
print STDERR ($app_name . ": found " . (1 + $#parts) . " total parts\n")
	if ($opts{verbose});

my $footer = "generated by " . $app_name . "-" . $app_version . " at " . $time;

make_index(\%opts, \%tags, \@files, $footer);

# FIXME: need to remove part_no dupes here.

make_description_list(\%opts, \%tags, \@parts, $footer)
	if (!$opts{no_description});

make_number_list(\%opts, \%tags, \@parts, $footer)
	if (!$opts{no_numbers});

make_price_list(\%opts, \%tags, \@parts, $footer)
	if (!$opts{no_price});

__END__
